#!/bin/bash
#
# layout:
#
# ┌─> username @ hostname <─> working_dir [python_env] [git_prompt]
# └─>
#

# The various escape codes that we can use to color our prompt.
 RED="\[\e[0;31m\]"
BRED="\[\e[1;31m\]"
 GRN="\[\e[0;32m\]"
BGRN="\[\e[1;32m\]"
 YLW="\[\e[0;33m\]"
BYLW="\[\e[1;33m\]"
 BLU="\[\e[0;34m\]"
BBLU="\[\e[1;34m\]"
 MAG="\[\e[0;35m\]"
BMAG="\[\e[1;35m\]"
 CYN="\[\e[0;36m\]"
BCYN="\[\e[1;36m\]"
 WHT="\[\e[0;37m\]"
BWHT="\[\e[1;37m\]"
 RST="\[\e[0m\]"

function set_git_prompt {

    if [[ `type -t __git_ps1` == "function" ]]; then
        git_prompt="${MAG}$(__git_ps1 "[%s]")${RST}"
    else
        git_prompt=""
    fi
}

# Return the prompt symbol to use, colorized based on the return value of the
# previous command.
function set_prompt_symbol {

    RSYMBOL="${BLU}>${RST}"
    LSYMBOL="${BLU}<${RST}"
    MIDDLE_PROMPT="${LSYMBOL}${CYN}─${RSYMBOL}"
    if [ $1 -eq 0 ]; then
        UPPER_PROMPT="${CYN}┌─${RSYMBOL}"
        LOWER_PROMPT="${CYN}└─${RSYMBOL}"
    else
        UPPER_PROMPT="${RED}┌─${RSYMBOL}"
        LOWER_PROMPT="${RED}└─${RSYMBOL}"
    fi
}

# Determine active Python virtualenv details.
function set_virtualenv {

    if [ -z "$VIRTUAL_ENV" ]; then
        PYTHON_VIRTUALENV=""
    else
        PYTHON_VIRTUALENV="${GRN}[`basename \"${VIRTUAL_ENV::-9}\"`]${RST} "
    fi
}

# Set the full bash prompt.
function set_bash_prompt {

    # Set the PROMPT_SYMBOL variable. We do this first so we don't lose the
    # return value of the last command.
    set_prompt_symbol $?

    set_virtualenv

    set_git_prompt

    if [[ `whoami` == "root" ]]; then
        user="${RED}\u"
    else
        user="${GRN}\u"
    fi
    user_host="${user} ${BLU}@ ${MAG}\h${RST}"
    path="${CYN}\w${RST} "

    # Set the bash prompt variable.
    PS1="
${UPPER_PROMPT} ${user_host} ${MIDDLE_PROMPT} ${path}${PYTHON_VIRTUALENV}${git_prompt}
${LOWER_PROMPT} "
}

# Tell bash to execute this function just before displaying its prompt.
PROMPT_COMMAND=set_bash_prompt

